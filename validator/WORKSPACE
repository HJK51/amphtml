workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "0e252c1779fb819b3f90b3eb2275debb5b530e8222fae1ce72f3202b6fc305d4",
    strip_prefix = "abseil-cpp-26ee072e14dea17fa8870d47cd7e8b4cc1c95e93",
    urls = ["https://github.com/abseil/abseil-cpp/archive/26ee072e14dea17fa8870d47cd7e8b4cc1c95e93.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "550f7a3bb95629a70286f13ff7fba96c3760398e8ef10a471094d9deb66f9be9",
    strip_prefix = "googletest-b4aaf97d8f7eaffab79aa15e10a91b331b941fe2",
    urls = ["https://github.com/google/googletest/archive/b4aaf97d8f7eaffab79aa15e10a91b331b941fe2.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "d9d4344331636f458359e6ee17b4f604a0eb819300c4867a9e47c45eb7eb051d",
    strip_prefix = "protobuf-77047d9cda0bd5478489d4b5a85f1907cfe7f4fa",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/77047d9cda0bd5478489d4b5a85f1907cfe7f4fa.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "4753cbb1e1460d54d03cc1413960a63a46b42c0d691dad45c3f0ce71741d97d6",
    strip_prefix = "gflags-03a4842c9c6aaef438d7bf0c84e8a62c8064992b",
    urls = ["https://github.com/gflags/gflags/archive/03a4842c9c6aaef438d7bf0c84e8a62c8064992b.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "566f95b2427efc0ef8926d2df167cc77ccba55c06f206abc02e8c17081fa5ffd",
    strip_prefix = "re2-6dcd83d60f7944926bfd308cc13979fc53dd69ca",
    urls = ["https://github.com/google/re2/archive/6dcd83d60f7944926bfd308cc13979fc53dd69ca.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "22a09267461164a86e6fdfc6eee3e9018a5cd993c8dcca4c41aa0b5941f27984",
    strip_prefix = "rules_cc-0d1b084cfa75dc2f41e4b638ebd544fc93b82edf",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/0d1b084cfa75dc2f41e4b638ebd544fc93b82edf.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "2b0f9c9314edcf7e0937f6b68124494c58643df763fd59e37fb5dc742e0202d4",
    strip_prefix = "rules_proto-557db790e7a71993ff85bf523099dfd25060ae2f",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/557db790e7a71993ff85bf523099dfd25060ae2f.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/557db790e7a71993ff85bf523099dfd25060ae2f.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "a2a498bf4ee62195b1e3cfd323eabc359d133db7247a2fe91af5a4eaa8178259",
    strip_prefix = "emsdk-0fde04880048f743056bed17cb0543a42e040fae/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/0fde04880048f743056bed17cb0543a42e040fae.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "90235e587dbc968a854ab11ac358c3a0fa57b4c121f540880419203dfe3cfa46",
    strip_prefix = "closure-library-7818ff7dc0b53555a7fb3c3427e6761e88bde3a2",
    urls = ["https://github.com/google/closure-library/archive/7818ff7dc0b53555a7fb3c3427e6761e88bde3a2.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "70ef2b4da987bf0d266e663d7c251eac509ff70dd65bba02d41d1e86e840a569",
    strip_prefix = "rules_closure-0.13.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.13.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.13.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
